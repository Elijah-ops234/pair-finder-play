@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Modern vibrant color palette */
    --background: 222 17% 8%;
    --foreground: 220 15% 95%;

    --card: 220 20% 12%;
    --card-foreground: 220 15% 95%;

    --popover: 220 20% 12%;
    --popover-foreground: 220 15% 95%;

    --primary: 280 100% 70%;
    --primary-foreground: 0 0% 98%;
    --primary-glow: 280 80% 80%;
    --primary-variant: 320 80% 75%;

    --secondary: 200 100% 60%;
    --secondary-foreground: 0 0% 98%;
    --secondary-glow: 200 80% 70%;

    --accent: 60 100% 60%;
    --accent-foreground: 0 0% 10%;
    --accent-glow: 60 80% 70%;

    --muted: 220 15% 20%;
    --muted-foreground: 220 15% 65%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 220 15% 25%;
    --input: 220 15% 25%;
    --ring: 280 100% 70%;

    --success: 120 70% 50%;
    --success-foreground: 0 0% 98%;

    /* Game-specific design tokens */
    --game-bg-start: 222 17% 8%;
    --game-bg-end: 260 20% 12%;
    --card-back: 280 100% 70%;
    --card-back-glow: 280 80% 80%;
    --card-shadow: 240 10% 5%;
    --neon-pink: 320 100% 70%;
    --neon-blue: 200 100% 60%;
    --neon-cyan: 180 100% 60%;
    --neon-purple: 280 100% 70%;

    /* Beautiful gradients */
    --gradient-bg: linear-gradient(135deg, hsl(222 17% 8%) 0%, hsl(260 20% 12%) 50%, hsl(280 15% 10%) 100%);
    --gradient-primary: linear-gradient(135deg, hsl(280 100% 70%) 0%, hsl(320 80% 75%) 100%);
    --gradient-secondary: linear-gradient(135deg, hsl(200 100% 60%) 0%, hsl(180 100% 60%) 100%);
    --gradient-accent: linear-gradient(135deg, hsl(60 100% 60%) 0%, hsl(45 100% 65%) 100%);
    --gradient-card: linear-gradient(135deg, hsl(280 80% 65%) 0%, hsl(320 70% 70%) 50%, hsl(200 80% 70%) 100%);
    --gradient-success: linear-gradient(135deg, hsl(120 70% 50%) 0%, hsl(160 60% 55%) 100%);
    --gradient-glass: linear-gradient(135deg, hsla(220 20% 15% / 0.8) 0%, hsla(280 20% 20% / 0.6) 100%);

    /* Enhanced shadows and glows */
    --shadow-card: 0 25px 50px -12px hsl(var(--card-shadow) / 0.4);
    --shadow-card-hover: 0 35px 70px -15px hsl(var(--card-shadow) / 0.6);
    --shadow-glow: 0 0 40px hsl(var(--primary-glow) / 0.6);
    --shadow-neon: 0 0 20px hsl(var(--primary) / 0.8), 0 0 40px hsl(var(--primary) / 0.4);
    --shadow-success-glow: 0 0 30px hsl(var(--success) / 0.8);

    --radius: 1.5rem;

    --sidebar-background: 220 20% 12%;
    --sidebar-foreground: 220 15% 85%;
    --sidebar-primary: 280 100% 70%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 220 15% 18%;
    --sidebar-accent-foreground: 220 15% 85%;
    --sidebar-border: 220 15% 25%;
    --sidebar-ring: 280 100% 70%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

@layer components {
  /* Game container with animated background */
  .game-container {
    background: var(--gradient-bg);
    position: relative;
    overflow: hidden;
  }

  .game-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 20% 30%, hsla(280 100% 70% / 0.15) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, hsla(200 100% 60% / 0.15) 0%, transparent 50%),
      radial-gradient(circle at 40% 80%, hsla(320 100% 70% / 0.1) 0%, transparent 50%);
    animation: float 20s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translate(0, 0) scale(1); }
    33% { transform: translate(10px, -10px) scale(1.1); }
    66% { transform: translate(-10px, 10px) scale(0.9); }
  }

  /* Enhanced memory cards */
  .memory-card {
    @apply relative w-16 h-16 sm:w-20 sm:h-20 md:w-24 md:h-24 lg:w-28 lg:h-28 cursor-pointer;
    perspective: 1000px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .memory-card:hover {
    transform: scale(1.05) md:scale(1.1) translateY(-2px) md:translateY(-5px);
    filter: brightness(1.1);
  }

  .memory-card-inner {
    @apply relative w-full h-full;
    transform-style: preserve-3d;
    transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .memory-card.flipped .memory-card-inner {
    transform: rotateY(180deg);
  }

  .memory-card-face {
    @apply absolute inset-0 w-full h-full flex items-center justify-center font-bold;
    backface-visibility: hidden;
    border-radius: 1rem md:border-radius-1.5rem;
    border: 2px md:border-3px solid transparent;
  }

  .memory-card-back {
    background: var(--gradient-card);
    box-shadow: var(--shadow-neon), var(--shadow-card);
    border: 2px md:border-3px solid hsl(var(--primary-glow));
    position: relative;
    overflow: hidden;
  }

  .memory-card-back::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, hsla(320 100% 70% / 0.3), transparent);
    animation: shimmer 3s linear infinite;
  }

  @keyframes shimmer {
    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
    100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
  }

  .memory-card-front {
    background: var(--gradient-glass);
    backdrop-filter: blur(10px);
    transform: rotateY(180deg);
    border: 2px md:border-3px solid hsl(var(--border));
    box-shadow: var(--shadow-card);
  }

  .memory-card.matched .memory-card-front {
    background: var(--gradient-success);
    border: 2px md:border-3px solid hsl(var(--success));
    box-shadow: var(--shadow-success-glow);
    animation: success-pulse 1.5s ease-in-out;
  }

  @keyframes success-pulse {
    0%, 100% { 
      transform: rotateY(180deg) scale(1);
      box-shadow: var(--shadow-success-glow);
    }
    25% { 
      transform: rotateY(180deg) scale(1.1);
      box-shadow: var(--shadow-success-glow), 0 0 60px hsl(var(--success) / 0.8);
    }
    75% { 
      transform: rotateY(180deg) scale(1.05);
    }
  }

  /* Enhanced game grid */
  .game-grid {
    @apply grid gap-3 sm:gap-4 md:gap-6 place-items-center p-4 sm:p-6 md:p-8;
    grid-template-columns: repeat(4, 1fr);
    background: hsla(220 20% 15% / 0.3);
    border-radius: 1.5rem md:border-radius-2rem;
    border: 2px solid hsl(var(--border));
    backdrop-filter: blur(20px);
    box-shadow: var(--shadow-card);
  }

  /* Glass morphism stats cards */
  .stats-card {
    background: var(--gradient-glass);
    backdrop-filter: blur(20px);
    border: 2px solid hsl(var(--border));
    border-radius: 1rem md:border-radius-1.5rem;
    padding: 1rem md:padding-1.5rem;
    box-shadow: var(--shadow-card);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .stats-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, hsla(280 100% 70% / 0.2), transparent);
    transition: left 0.5s ease;
  }

  .stats-card:hover::before {
    left: 100%;
  }

  .stats-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-card-hover);
    border-color: hsl(var(--primary-glow));
  }

  /* Animated title */
  .game-title {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradient-shift 4s ease-in-out infinite;
    text-shadow: 0 0 30px hsl(var(--primary) / 0.5);
  }

  @keyframes gradient-shift {
    0%, 100% { filter: hue-rotate(0deg); }
    50% { filter: hue-rotate(20deg); }
  }

  /* Enhanced bounce animation */
  @keyframes bounce-in {
    0% { 
      transform: scale(0.3) rotate(-10deg); 
      opacity: 0;
    }
    50% { 
      transform: scale(1.1) rotate(5deg);
      opacity: 0.8;
    }
    100% { 
      transform: scale(1) rotate(0deg); 
      opacity: 1;
    }
  }

  .bounce-in {
    animation: bounce-in 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  /* Glowing buttons */
  .glow-button {
    background: var(--gradient-primary);
    border: 2px solid hsl(var(--primary-glow));
    box-shadow: 0 0 20px hsl(var(--primary) / 0.4);
    transition: all 0.3s ease;
  }

  .glow-button:hover {
    box-shadow: 0 0 30px hsl(var(--primary) / 0.8);
    transform: translateY(-2px);
  }

  /* Win message enhancement */
  .win-message {
    background: var(--gradient-glass);
    backdrop-filter: blur(20px);
    border: 3px solid hsl(var(--success));
    box-shadow: 
      var(--shadow-success-glow),
      0 25px 50px -12px hsl(var(--success) / 0.4);
  }
}